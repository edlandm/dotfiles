[grep]
    extendRegexp = true
    lineNumber = true
[core]
	editor = vim
[help]
	autocorrect = 1
[color]
	ui = true
[alias]
    diff = diff --word-diff
    dl = diff @{1} ; diff latest
    ds = diff --staged
    gr = grep --break --heading --line-number
    ls = log --graph --pretty=format:'%C(yellow)%h %Cgreen%an %Creset%s %C(bold blue)(%cr)'
    latest = log @{1}.. --pretty=format:'%C(yellow)%h %Cgreen%an %Creset%s %C(bold blue)(%cr)'
    st = status -sb
    url = remote show origin
    undo-commit = git reset --soft HEAD~1
[include]
    path = ~/.local.gitconfig

# Idea commands that are neat
#
# Search for staged file containing a regex that was either added or removed
#   git diff-index --cached -G <regex> HEAD | cut -f2
# Search through previous revisions whose contents contain a given regex
#   git grep <regexp> $(git rev-list --all)
# Search for commits whose changes include your regex
#   git log -G <regex>
# Search files for lines that contain two regexs on the same line
#   git grep -e <regex> --and -e <regex>
# Search files that contain multiple terms (not necessarily on the same line)
#   git grep --all-matches -e <regex> -e <regex>
# Find commits whose messages mention <regex> or who were authored by <user> in
# last month
#   git log --grep=<regex> --author=<user> --since=1.month
# Show commits that mention <regex> AND were written by <user>
#   git log --all-match --grep=<regex> --author<user>
[user]
	name = edlandm
	email = edlandm@wwu.edu
[push]
	default = simple
